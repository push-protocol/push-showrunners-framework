steps:
# Step 1: Build the Docker Image and push to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
    - '-c'
    - | 
      #!/bin/bash
      gcloud container clusters get-credentials gke-s-services-base-usce1 --region us-central1 --project push-stage-apps
      export DEP_EXIST=$(kubectl get deployment -n apps | grep push-showrunners)
      if [[ -z "$${DEP_EXIST// /}" ]]
      then
        echo "❌ Deployment for showrunners has not been created, image will not be created. Please commit to push-showrunners-channels repository first!"
      else
        echo "✔️ Creating image..."
        cp .env.sample .env
        docker build -t us-central1-docker.pkg.dev/push-stage-apps/ar-s-services-base-usce1/push-showrunners-image:$SHORT_SHA .
        docker push us-central1-docker.pkg.dev/push-stage-apps/ar-s-services-base-usce1/push-showrunners-image:$SHORT_SHA
      fi

# Step 2: Create the Cloud Deploy Pipeline and release
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - | 
      #!/bin/bash
      gcloud container clusters get-credentials gke-s-services-base-usce1 --region us-central1 --project push-stage-apps
      while true
      do
        export BUILD_EXIST=$(gcloud builds list --region us-central1  --filter "tags=showrunners AND (status=QUEUED OR status=WORKING)")
        if [[ -z "$${BUILD_EXIST// /}" ]]
        then
          echo "No current build running on push-showrunners-channels repository, proceeding further..."
          break
        else
          echo "⌛ Waiting for the ongoing build to complete on push-showrunners-channels repository"
        fi
      done
      export DEP_EXIST=$(kubectl get deployment -n apps | grep push-showrunners)
      if [[ -z "$${DEP_EXIST// /}" ]]
      then
        echo "❌ Deployment for showrunners has not been created, this trigger will be stopped. Please commit to push-showrunners-channels repository first!"
      else
        echo "✔️ Updating Deployment..."
        kubectl set image deployment push-showrunners push-showrunners=us-central1-docker.pkg.dev/push-stage-apps/ar-s-services-base-usce1/push-showrunners-image:$SHORT_SHA -n=apps
        echo "✅ Updated Deployment..."
      fi
options:
 logging: CLOUD_LOGGING_ONLY
 workerPool: 'projects/push-stage-apps/locations/us-central1/workerPools/worker-pool-s-services-base-usce1'
